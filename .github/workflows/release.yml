name: Scheduled Data Export and Release

on:
  schedule:
    # Runs every Sunday at 03:00 UTC. Adjust as needed.
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  build-export-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      # CRITICAL: Use Python 3.13 to match your local environment
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: pip install poetry

      # This ensures a fresh install based on the correct python version
      - name: Remove poetry.lock if it exists
        run: rm -f poetry.lock

      - name: Install project dependencies
        run: poetry install

      - name: Run the export script
        run: poetry run python main_export.py --dest ./output

      - name: Archive the generated files
        run: |
          ARCHIVE_NAME="data-export-$(date +'%Y-%m-%d').zip"
          zip -r $ARCHIVE_NAME ./output
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV

      - name: Generate release tag
        run: |
          echo "RELEASE_TAG=data-release-$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.RELEASE_TAG }} -a -m "Automated data export for ${{ env.RELEASE_TAG }}"
          git push origin ${{ env.RELEASE_TAG }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Data Export ${{ env.RELEASE_TAG }}
          body: Automated data export and generated graphs. The attached zip file contains all PNG and JSON outputs.
          draft: false
          prerelease: false

      - name: Upload Archive to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/zip
